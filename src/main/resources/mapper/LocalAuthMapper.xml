<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.kingworker.blog.mapper.LocalAuthMapper">
  <resultMap id="BaseResultMap" type="top.kingworker.blog.entity.LocalAuth">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from localauth
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="top.kingworker.blog.entity.LocalAuth">

    insert into localauth (id, username, email, 
      password, user_id, salt
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{salt,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByUserId" parameterType="top.kingworker.blog.entity.LocalAuth">
    update localauth
    set username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">

    select id, username, email, password, user_id, salt
    from localauth
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">

    select id, username, email, password, user_id, salt
    from localauth
  </select>

<!--  LocalAuth findByUsername(String username);-->
  <select id="findByUsername" resultMap="BaseResultMap">
    select id, username, email, password, user_id, salt
    from localauth where username = #{username}
  </select>
<!--  LocalAuth findByEmail(String email);-->
  <select id="findByEmail" resultMap="BaseResultMap">
    select id, username, email, password, user_id, salt
    from localauth where email = #{email}
  </select>
<!--   Integer getUserIdByAccount-->
  <select id="getUserIdByAccount" resultType="java.lang.Integer">
    select user_id from localauth
    where email = #{email} and username = #{username}
  </select>

<!--  LocalAuth findByUserId(Integer userId);-->
  <select id="findByUserId" resultMap="BaseResultMap">
    select id, username, email, password, user_id, salt
    from localauth
    where user_id = #{userId}
  </select>
</mapper>